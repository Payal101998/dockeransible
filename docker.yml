- name: "Docker Configuration"
  hosts: docker
  vars_files:
  - var.yml
  tasks:
         - name: "directory for dvd"
           file:
                   state: directory
                   path: "{{ dvd_dir }}"

         - name: "dvd mount to folder"
           mount:
                   src: "/dev/cdrom"
                   path: "{{ dvd_dir }}"
                   state: mounted
                   fstype: "iso9660"

         - name: "configure yum repo"
           yum_repository:
                   baseurl: "{{ dvd_dir }}/AppStream"
                   name: "mydvd1"
                   description: "my yum repo for Packages"
                   gpgcheck: no
         - yum_repository:
                   baseurl: "{{ dvd_dir }}/BaseOS"
                   name: "mydvd2"
                   description: "my yum repo for Packages"
                   gpgcheck: no

         - name: "yum repo for Docker Engine"
           yum_repository:
                   baseurl: "https://download.docker.com/linux/centos/7/x86_64/stable"
                   name: "docker"
                   description: "my yum repo for docker"
                   gpgcheck: no     

         - name: "Installing Docker Community Engine"
           package: 
                   name: "docker-ce-18.09.1-3.el7.x86_64"
                   state: present

         - name: "Start Docker Services"
           service:
                    name: "docker"
                    state: restarted 

         - name: "Install pip Command"
           package:
                   name: "python3-pip"
                   state: present
                      
       
         - name: "Install Docker Python Module"
           pip:
                    name: "docker-py"

         - name: "Pull(Download) httpd server images from Docker Hub"
           docker_image:
                     name: "httpd"
                     source: pull
         
         - name: "Creating Directory"
           file: 
                     state: directory
                     path: "/web"           
                                 
         - name: "Copying html file in the directory "
           copy: 
                     src: "web1.html"
                     dest: "/web"   
                    
         - name: "Creating Container Using httpd image"             
           docker_container:
                     name: "Dockerhttpdserver"
                     image: "httpd"
                     state: started
                     exposed_ports: 
                     - "80"
                     ports: 
                     - "8080:80"
                     volumes: 
                     -  /web:/usr/local/apache2/htdocs/
         
         - name: "Firewalld For port 80"
           firewalld:
                     masquerade: yes
                     zone: public
                     permanent: yes
                     state: enabled
                     
